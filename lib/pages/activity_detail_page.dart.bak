import 'package:flutter/material.dart';
import 'package:habitstimer/widgets/activity_stats_panel.dart';
import 'package:habits_timer/models/activity.dart';
import 'package:habitstimer/widgets/activity_stats_panel.dart';
import 'package:habits_timer/services/database_service.dart';

import 'package:habitstimer/widgets/activity_stats_panel.dart';
class ActivityDetailPage extends StatefulWidget {
  final Activity activity;
  const ActivityDetailPage({super.key, required this.activity});

  @override
  State<ActivityDetailPage> createState() => _ActivityDetailPageState();
}

class _ActivityDetailPageState extends State<ActivityDetailPage> {
  final _db = DatabaseService();

  @override
  Widget build(BuildContext context) {
    final a = widget.activity;

    return Scaffold(
      appBar: AppBar(
        title: Text('${a.emoji}  ${a.name}'),
      ),
      body: FutureBuilder<List>(
        future: _db.getSessionsForActivity(a.id!),
        builder: (_, snap) {
          if (!snap.hasData) {
            return const Center(child: CircularProgressIndicator());
          }
          final sessions = snap.data!;
          if (sessions.isEmpty) {
            return const Center(child: Text("Aucune session pour le moment."));
          }

          return ListView.builder(
            padding: const EdgeInsets.all(12),
            itemCount: sessions.length,
            itemBuilder: (_, i) {
              final s = sessions[i];
              final end = s.endAt ?? DateTime.now();
              final mins = end.difference(s.startAt).inMinutes;
              return ListTile(
                leading: const Icon(Icons.history),
                title: Text('${_fmtTime(s.startAt)} â†’ ${_fmtTime(end)}'),
                subtitle: Text('$mins min'),
              );
            },
          );
        },
      ),
      bottomNavigationBar: SafeArea(
        child: Padding(
          padding: const EdgeInsets.fromLTRB(16, 6, 16, 16),
          child: Row(
            children: [
          const SizedBox(height: 8),
          ActivityStatsPanel(activity: activity),

              Expanded(
                child: FilledButton.icon(
                  onPressed: () async {
                    await _db.startSession(a.id!);
                    if (mounted) setState(() {});
                  },
                  icon: const Icon(Icons.play_arrow),
                  label: const Text("Start"),
                ),
              ),
              const SizedBox(width: 12),
              Expanded(
                child: FilledButton.tonalIcon(
                  onPressed: () async {
                    await _db.stopSessionByActivity(a.id!);
                    if (mounted) setState(() {});
                  },
                  icon: const Icon(Icons.stop),
                  label: const Text("Stop"),
                ),
              ),
            ],
          ),
        ),
      ),
    );
  }

  String _two(int n) => n.toString().padLeft(2, '0');
  String _fmtTime(DateTime t) => '${_two(t.hour)}:${_two(t.minute)}';
}

